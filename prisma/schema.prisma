// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String         @unique
  password  String
  avatarUrl String?
  status    String?
  createdAt DateTime       @default(now())
  messagesSent     Message[] @relation("SentMessages")
  messagesReceived Message[] @relation("ReceivedMessages")
  groupMembers     GroupMember[]
}

model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  text       String?
  fileUrl    String?
  photoUrl   String?
  audioUrl   String?
  senderId   String   @db.ObjectId
  receiverId String?  @db.ObjectId
  groupId    String?  @db.ObjectId
  seen       Boolean  @default(false)
  createdAt  DateTime @default(now())

  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User?    @relation("ReceivedMessages", fields: [receiverId], references: [id])
  group      Group?   @relation(fields: [groupId], references: [id])
}

model Group {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  avatarUrl String?
  createdAt DateTime       @default(now())
  members   GroupMember[]
  messages  Message[]
}

model GroupMember {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  userId   String   @db.ObjectId
  groupId  String   @db.ObjectId
  joinedAt DateTime @default(now())
  isAdmin  Boolean  @default(false)

  user     User     @relation(fields: [userId], references: [id])
  group    Group    @relation(fields: [groupId], references: [id])
}
